@model PagedList.IPagedList<DataLayer.Employees_Log>
@using PagedList.Mvc;
@{ List<DataLayer.vw_Managers_From_Logs> managers = ViewBag.Managers; }
<link href="~/Content/PagedList.css" rel="stylesheet" />

<script type="text/javascript">
    $(document).ready(function () {
        $('#AuditDateFrom_Filter').datepicker();
        $('#AuditDateTo_Filter').datepicker();
    });
</script>

<div style="padding: 5px; font-size: smaller;">
    <table cellpadding="2">
        <tr>
            <td style="text-align: left; font-size: larger;"><b>Filter Options:</b></td>
            <td style="text-align: left;">
                Username:
            </td>
            <td style="text-align: left;">
                First Name:
            </td>
            <td style="text-align: left;">
                Last Name:
            </td>
            <td style="text-align: left;">
                Dates:
            </td>
            <td style="text-align: left;">
                Changed By:
            </td>
            <td style="text-align: left;">
                Change Type:
            </td>
        </tr>
        <tr>
            <td></td>
            <td>
                <input type="text" id="Username_Filter" value="@ViewBag.Username" />
            </td>
            <td>
                <input type="text" id="FirstName_Filter" value="@ViewBag.FirstName" />
            </td>
            <td>
                <input type="text" id="LastName_Filter" value="@ViewBag.LastName" />
            </td>
            <td>
                <input type="text" id="AuditDateFrom_Filter" style="width: 75px;" value="@ViewBag.AuditDateFrom" />
                to
                <input type="text" id="AuditDateTo_Filter" style="width: 75px;" value="@ViewBag.AuditDateTo" />
            </td>
            <td>
                @Html.DropDownList("UserID_Filter", new SelectList(ViewBag.Users, "Value", "Text", ViewBag.AuditUser), new { @id = "UserID_Filter" })
            </td>
            <td>
                @Html.DropDownList("selUser_Filter", new SelectList(ViewBag.ChangeTypes, "Value", "Text", ViewBag.ChangeType), new { @id = "selUser_Filter" })
            </td>
            <td>
                <input type="button" value="Filter List" onclick="FilterEmployeeLog();" />
                <input type="hidden" value="@Model.PageNumber" id="hidPageNum" />
            </td>
        </tr>
    </table>
</div>

@if (Model.Count == 0)
{
    <p style="text-align: center; color: red;">No results returned</p>
}
else
{
    <table class="webgrid-table">
        <tr>
            <th>
                <a style="cursor: pointer; text-decoration: underline;" onclick="FilterEmployeeLog('Username','@ViewBag.SortDirection');">Username</a>
            </th>
            <th>
                <a style="cursor: pointer; text-decoration: underline;" onclick="FilterEmployeeLog('FirstName','@ViewBag.SortDirection');">First Name:</a>
            </th>
            <th>
                <a style="cursor: pointer; text-decoration: underline;" onclick="FilterEmployeeLog('LastName','@ViewBag.SortDirection');">Last Name:</a>
            </th>
            <th>
                Email
            </th>
            <th>
                Manager?
            </th>
            <th>
                Reports to
            </th>
            <th>
                Employee Number
            </th>
            <th>
                Audit Type
            </th>
            <th>
                Audit Date
            </th>
            <th>
                Audit By
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @if (item.IsManager != null)
                    {
                        Boolean isManager = Convert.ToBoolean(item.IsManager);
                        @Html.CheckBox(item.LogID.ToString(), isManager)
                    }
                </td>
                <td>
                    @{ String reportTo = ""; }
                    @if (item.ReportsTo != null && item.ReportsTo != 0)
                    {
                        reportTo = managers.Where(u => u.EmpID == item.ReportsTo).FirstOrDefault().ManagerName;
                    }

                    @reportTo
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.EmpNum)
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.ChangeType)
                </td>

                <td>
                    @{ String auditDate = item.ChangeDate.ToString("MM/dd/yyyy hh:mm tt"); }
                    @auditDate
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.User.Username)
                </td>


            </tr>
        }

    </table>
}

<div id="divPager">
    @if (Model.PageCount > 1)
    {
        @:Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
































        @Html.PagedListPager(Model, page => Url.Action("GetEmployeesLog", new
   {
       sortOrder = ViewBag.CurrentSort,
       CurrentSort = ViewBag.CurrentSort,
       page = page,
       Username = ViewBag.Username,
       FirstName = ViewBag.FirstName,
       LastName = ViewBag.LastName,
       AuditUser = ViewBag.AuditUser,
       AuditDateFrom = ViewBag.AuditDateFrom,
       AuditDateTo = ViewBag.AuditDateTo,
       ChangeType = ViewBag.ChangeType
   }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "divMainLogs" }))}
</div>
